import {
  visit
} from "./chunk-7IGYKCIX.js";
import "./chunk-O7VYOREP.js";
import "./chunk-5WWUZCGV.js";

// ../node_modules/remark-supersub/lib/index.js
function supersub() {
  return (tree) => {
    visit(tree, ["text"], (node, i, parent) => {
      if (node.type !== "text") {
        return;
      }
      const { value } = node;
      const values = value.split(/\^/);
      if (values.length === 1 || values.length % 2 === 0) {
        return;
      }
      const children = values.map((str, i2) => i2 % 2 === 0 ? {
        type: "text",
        value: str
      } : {
        type: "superscript",
        data: {
          hName: "sup"
        },
        children: [
          {
            type: "text",
            value: str
          }
        ]
      });
      parent.children.splice(i, 1, ...children);
    });
    visit(tree, ["text"], (node, i, parent) => {
      if (node.type !== "text") {
        return;
      }
      const { value } = node;
      const values = value.split(/\~/);
      if (values.length === 1 || values.length % 2 === 0) {
        return;
      }
      const children = values.map((str, i2) => i2 % 2 === 0 ? {
        type: "text",
        value: str
      } : {
        type: "subscript",
        data: {
          hName: "sub"
        },
        children: [
          {
            type: "text",
            value: str
          }
        ]
      });
      parent.children.splice(i, 1, ...children);
    });
  };
}
export {
  supersub as default
};
//# sourceMappingURL=remark-supersub.js.map
